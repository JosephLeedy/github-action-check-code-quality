name: Code Quality Checks

on:
  workflow_call:
    inputs:
      fetch-depth:
        type: number
        required: false
        default: 2
        description: "Number of code revisions to check out (\"O\" for all)"
      base-branch:
        type: string
        required: false
        default: develop
        description: "Base Git branch (i.e. \"develop\" or \"main\")"
      node-version:
        type: string
        required: false
        default: 16
        description: "Version of Node.js to use for running JavaScript checks"
      php-version:
        type: string
        required: false
        default: 7.4
        description: "Version of PHP to use for running PHP checks"

    secrets:
      access-token:
        required: true
        description: "GitHub access token"
      composer-auth-json:
        required: false
        description: "Composer auth.json file contents"

jobs:
  changed-files:
    runs-on: ubuntu-latest

    name: Gather Changelist

    outputs:
      all: ${{ steps.changes.outputs.all}}
      php: ${{ steps.changes.outputs.php }}
      js: ${{ steps.changes.outputs.js }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Get changed files
        id: changes
        run: |
          BASE_SHA="${{ github.event.before }}"

          if [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
            BASE_SHA="${{ inputs.base-branch }}"
          fi

          if [[ ! -z "${{ github.event.pull_request.base.sha }}" ]]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          fi

          echo "all=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT
          echo "php=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA ${{ github.sha }} | grep -E '.ph(p|tml)$' | xargs)" >> $GITHUB_OUTPUT
          echo "js=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA ${{ github.sha }} | grep .js$ | xargs)" >> $GITHUB_OUTPUT

  javascript-code-quality:
    runs-on: ubuntu-latest

    name: Check JavaScript Code Quality

    needs: changed-files

    if: ${{needs.changed-files.outputs.js}}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'

      - name: Install Node.js packages
        run: npm ci

      - name: Download Magento JavaScript Coding Standard
        run: |
          mkdir -p vendor/magento/magento-coding-standard/eslint && \
          curl -L https://raw.githubusercontent.com/magento/magento-coding-standard/master/eslint/.eslintrc-magento \
            -o vendor/magento/magento-coding-standard/eslint/.eslintrc-magento

      - name: Check JavaScript syntax
        run: npx eslint --output-file eslint_report.json --format json ${{needs.changed-files.outputs.js}}
        continue-on-error: true

      - name: Annotate code linting results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.access-token }}"
          report-json: "eslint_report.json"

  php-code-quality:
    runs-on: ubuntu-latest

    name: Check PHP Code Quality

    needs: changed-files

    if: ${{needs.changed-files.outputs.php}}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          coverage: none
          tools: composer:2.2, cs2pr
        env:
          GITHUB_TOKEN: ${{ secrets.access-token }}
          COMPOSER_AUTH_JSON: ${{ secrets.composer-auth-json }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check PHP Syntax
        run: vendor/bin/parallel-lint --exclude .git --exclude vendor --checkstyle ${{needs.changed-files.outputs.php}} | cs2pr

      - name: Detect PHP coding standard violations
        run: vendor/bin/phpcs -q --report=checkstyle ${{needs.changed-files.outputs.php}} | cs2pr --graceful-warnings

      - name: Analyze PHP code for potential bugs
        run: vendor/bin/phpstan analyse ${{needs.changed-files.outputs.php}}
