name: Code Quality Checks

on:
  pull_request:

  push:
    branches:
      - 'main'
      - 'feature/**'

  workflow_dispatch:

jobs:
  changed-files:
    runs-on: ubuntu-latest

    name: Gather Changelist

    outputs:
      all: ${{ steps.changes.outputs.all}}
      php: ${{ steps.changes.outputs.php }}
      js: ${{ steps.changes.outputs.js }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          #fetch-depth: 2
          fetch-depth: 0 # Fetch entire history for testing purposes. Not recommended for large repositories.

      - name: Get changed files
        id: changes
        run: |
          if [[ ! -z "${{ github.event.pull_request.base.sha }}" ]]; then
            echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
            echo "::set-output name=php::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '.ph(p|tml)$' | xargs)"
            echo "::set-output name=js::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .js$ | xargs)"
          else
            echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.before }} ${{ github.sha }} | xargs)"
            echo "::set-output name=php::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.before }} ${{ github.sha }} | grep -E '.ph(p|tml)$' | xargs)"
            echo "::set-output name=js::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.before }} ${{ github.sha }} | grep .js$ | xargs)"
          fi

  javscript-code-quality:
    runs-on: ubuntu-latest

    name: Check JavaScript Code Quality

    needs: changed-files

    if: ${{needs.changed-files.outputs.js}}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install Node.js packages
        run: npm ci

      - name: Download Magento JavaScript Coding Standard
        run: |
          mkdir -p vendor/magento/magento-coding-standard/eslint && \
          curl -L https://raw.githubusercontent.com/magento/magento-coding-standard/master/eslint/.eslintrc-magento \
            -o vendor/magento/magento-coding-standard/eslint/.eslintrc-magento

      - name: Check JavaScript syntax
        run: npx eslint --output-file eslint_report.json --format json ${{needs.changed-files.outputs.js}}
        continue-on-error: true

      - name: Annotate code linting results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"

  php-code-quality:
    runs-on: ubuntu-latest

    name: Check PHP Code Quality

    needs: changed-files

    if: ${{needs.changed-files.outputs.php}}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none
          tools: composer, cs2pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #COMPOSER_AUTH_JSON: '${{ secrets.COMPOSER_AUTH_JSON }}'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check PHP Syntax
        run: vendor/bin/parallel-lint --exclude .git --exclude vendor --checkstyle ${{needs.changed-files.outputs.php}} | cs2pr

      - name: Detect PHP coding standard violations
        run: vendor/bin/phpcs -q --report=checkstyle ${{needs.changed-files.outputs.php}} | cs2pr --graceful-warnings

      - name: Analyze PHP code for potential bugs
        run: vendor/bin/phpstan analyse ${{needs.changed-files.outputs.php}}
